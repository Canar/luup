#!/usr/bin/env ruby
require 'open3'
require 'shellwords'
require 'io/console'
require 'pathname'

pkg='rumu'
ver='0.3.2'
pkgd="#{Dir.home}/.config/#{pkg}"

chan,rate,word=2,44100,4
ff_fmt="-ac #{chan} -ar #{rate} -f f#{word*8}le"

File.write(pkgd+"/dev","-f pulse default") unless File.file?("#{pkgd}/dev")
ff_out=File.read(pkgd+"/dev")

list,list_i,cycle,mode,ssoff,help=[],0,0,:load,'',''
if ARGV.length==0
  if File.file?("#{pkgd}/list")
    list=File.read("#{pkgd}/list").split("\n")
    if File.file?("#{pkgd}/pos")
      pos=File.read("#{pkgd}/pos").split("\n")
      list_i=pos[0].to_i
      cycle=pos[1].to_i
      cycle-=3 if cycle>3
      ssoff="-ss #{cycle} " if cycle>0
    end
  else
    puts "Usage: #{pkg} files_to_play"
    exit 1
  end
else
  list=ARGV.map{|x|Pathname(x).realpath.to_s}
end
prefix=/\A(.*).*(\n\1.*)*\Z/.match(list.join("\n"))[1]
puts prefix

ii,io,ie,it=nil,nil,nil,nil
oi,oo,oe,ot=Open3.popen3("ffmpeg #{ff_fmt} -i - #{ff_out}")
oo.close

pt=Thread.new{
  until :quit == mode
    if io and io.eof?
      list_i+=1
      mode=list_i>=list.count ? :quit : :load
    end
    case mode
    when :load #load new track
      [io,ie].each{|x|x.close} unless !io or io.closed?
      ii,io,ie,it = Open3.popen3 "ffmpeg -i #{Shellwords.escape(list[list_i])} #{ssoff} #{ff_fmt} -"
      print ' '*help.length
      help=''
      puts "\r#{list[list_i][prefix.length..-1]}"
      ii.close
      cycle=0 unless ssoff.length > 0
      ssoff=''
      mode=:play
    when :play
      oi.write(io.read(word*chan*rate))
      cycle+=1
    end
  end
}

until :quit == mode
  print "\r#{cycle/60}:#{"%02d"%(cycle%60)} > "
  case ch=IO.console.raw{|c|c.read_nonblock(1) rescue ''}.downcase
  when 'n'
    list_i+=1
    mode= list_i<list.count ? :load : :quit
  when 'r'
    mode=:load
  when 'p'
    if list_i>0
      list_i-=1
      mode=:load
    end 
  when 's'
    print "Seek to: "
    ti=(ts=IO.console.readline.chomp).split(':')
    ssoff="-ss #{ts}"
    cycle=(ti[-1].to_f + ti[-2].to_f*60 + ti[-3].to_f*60*60).to_i
    mode=:load
  when 'q'
    mode=:quit
    Dir.mkdir(pkgd) unless File.directory?(pkgd)
    File.write(pkgd+"/list",list.join("\n"))
    File.write(pkgd+"/pos",list_i.to_s+"\n"+cycle.to_s)
  when ''
    sleep rand
  else
    print (help="#{ch} < #{list_i>0?"[P]rev ":""}[R]estart [S]eek [N]ext [Q]uit")
  end
end

puts "\r    ]  #{pkg} ‚úù v#{ver}  [    "
pt.join
